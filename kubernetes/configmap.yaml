kind: ConfigMap
apiVersion: v1
metadata:
  name: distribution-remote-vllm-config
  namespace: llama-stack
  uid: 7a8a3439-fffe-45d9-a6d5-5a52d52d5d62
  resourceVersion: '1058156896'
  creationTimestamp: '2025-03-08T05:58:40Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: v1
      time: '2025-03-08T07:56:44Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:config.yaml': {}
data:
  config.yaml: |
    version: '2'
    image_name: vllm-pgvector
    container_image: vllm-pgvector
    apis:
    - inference
    - vector_io
    - safety
    - agents
    - telemetry
    - eval
    - datasetio
    - scoring
    - tool_runtime
    providers:
      inference:
      - provider_id: vllm-inference
        provider_type: remote::vllm
        config:
          url: ${env.VLLM_URL}
          max_tokens: ${env.VLLM_MAX_TOKENS:4096}
          api_token: ${env.VLLM_API_TOKEN:fake}
          model_id: ${env.INFERENCE_MODEL}
          model_type: llm
      - provider_id: sentence-transformers
        provider_type: inline::sentence-transformers
        config: {}
      vector_io:
      - provider_id: pgvector
        provider_type: remote::pgvector
        config:
          host: ${env.PGVECTOR_HOST:localhost}
          port: ${env.PGVECTOR_PORT:5432}
          db: ${env.PGVECTOR_DB}
          user: ${env.PGVECTOR_USER}
          password: ${env.PGVECTOR_PASSWORD}
      safety:
      - provider_id: llama-guard
        provider_type: inline::llama-guard
        config: {}
      agents:
      - provider_id: meta-reference
        provider_type: inline::meta-reference
        config:
          persistence_store:
            type: sqlite
            namespace: null
            db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/vllm-pgvector}/agents_store.db
      telemetry:
      - provider_id: meta-reference
        provider_type: inline::meta-reference
        config:
          service_name: ${env.OTEL_SERVICE_NAME:llama-stack}
          sinks: ${env.TELEMETRY_SINKS:console,sqlite}
          sqlite_db_path: ${env.SQLITE_DB_PATH:~/.llama/distributions/vllm-pgvector/trace_store.db}
      eval:
      - provider_id: meta-reference
        provider_type: inline::meta-reference
        config: {}
      datasetio:
      - provider_id: localfs
        provider_type: inline::localfs
        config: {}
      scoring:
      - provider_id: braintrust
        provider_type: inline::braintrust
        config:
          openai_api_key: ${env.OPENAI_API_KEY:}
      tool_runtime:
      - provider_id: brave-search
        provider_type: remote::brave-search
        config:
          api_key: ${env.BRAVE_SEARCH_API_KEY:}
          max_results: 3
      - provider_id: tavily-search
        provider_type: remote::tavily-search
        config:
          api_key: ${env.TAVILY_SEARCH_API_KEY:}
          max_results: 3
      - provider_id: code-interpreter
        provider_type: inline::code-interpreter
        config: {}
      - provider_id: rag-runtime
        provider_type: inline::rag-runtime
        config: {}
      - provider_id: model-context-protocol
        provider_type: remote::model-context-protocol
        config: {}
      - provider_id: wolfram-alpha
        provider_type: remote::wolfram-alpha
        config: {}
    metadata_store: 
      type: sqlite
      db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/vllm-pgvector}/registry.db
    models: 
      - metadata: {}
        model_id: ${env.INFERENCE_MODEL}
        provider_id: vllm-inference
        model_type: llm
      - metadata: 
          embedding_dimension: 384
        model_id: all-MiniLM-L6-v2
        provider_id: sentence-transformers
        model_type: embedding
    shields: []
    vector_dbs: []
    datasets: []
    scoring_fns: []
    benchmarks: []
    tool_groups: 
    - toolgroup_id: builtin::websearch
      provider_id: tavily-search
    - toolgroup_id: builtin::rag
      provider_id: rag-runtime
    - toolgroup_id: builtin::code_interpreter
      provider_id: code-interpreter
    - toolgroup_id: builtin::wolfram_alpha
      provider_id: wolfram-alpha
    server:
      port: 8321
      tls_certfile: null
      tls_keyfile: null
